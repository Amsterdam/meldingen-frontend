import type { FormType } from '@formio/react'

const mockPanels = [
  {
    title: 'Page 1',
    label: 'Page 1',
    type: 'panel',
    key: 'page1',
    id: 'er2mpjq',
    input: false,
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: false,
    hidden: false,
    clearOnHide: false,
    refreshOn: '',
    redrawOn: '',
    tableView: false,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    description: '',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: null,
    attributes: {},
    validateOn: 'change',
    validate: {
      required: false,
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
    },
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    tree: false,
    lazyLoad: false,
    theme: 'default',
    breadcrumb: 'default',
  },
  // {
  //   title: 'Page 2',
  //   label: 'Page 2',
  //   type: 'panel',
  //   key: 'page2',
  //   id: 'ehqvlem',
  //   input: false,
  //   placeholder: '',
  //   prefix: '',
  //   customClass: '',
  //   suffix: '',
  //   multiple: false,
  //   defaultValue: null,
  //   protected: false,
  //   unique: false,
  //   persistent: false,
  //   hidden: false,
  //   clearOnHide: false,
  //   refreshOn: '',
  //   redrawOn: '',
  //   tableView: false,
  //   modalEdit: false,
  //   dataGridLabel: false,
  //   labelPosition: 'top',
  //   description: '',
  //   errorLabel: '',
  //   tooltip: '',
  //   hideLabel: false,
  //   tabindex: '',
  //   disabled: false,
  //   autofocus: false,
  //   dbIndex: false,
  //   customDefaultValue: '',
  //   calculateValue: '',
  //   calculateServer: false,
  //   widget: null,
  //   attributes: {},
  //   validateOn: 'change',
  //   validate: {
  //     required: false,
  //     custom: '',
  //     customPrivate: false,
  //     strictDateValidation: false,
  //     multiple: false,
  //     unique: false,
  //   },
  //   conditional: {
  //     show: null,
  //     when: null,
  //     eq: '',
  //   },
  //   overlay: {
  //     style: '',
  //     left: '',
  //     top: '',
  //     width: '',
  //     height: '',
  //   },
  //   allowCalculateOverride: false,
  //   encrypted: false,
  //   showCharCount: false,
  //   showWordCount: false,
  //   properties: {},
  //   allowMultipleMasks: false,
  //   addons: [],
  //   tree: false,
  //   lazyLoad: false,
  //   theme: 'default',
  //   breadcrumb: 'default',
  // },
]

const mockTextFields = [
  {
    label: 'Text Field',
    description: '',
    key: 'textField1',
    type: 'textfield',
    input: true,
    position: 1,
    validate: {
      json: null,
      required: false,
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      minLength: '',
      maxLength: '',
      pattern: '',
    },
    question: 53,
    id: 'emw2bm8',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: true,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: {
      type: 'input',
    },
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    mask: false,
    inputType: 'text',
    inputFormat: 'plain',
    inputMask: '',
    displayMask: '',
    spellcheck: true,
    truncateMultipleSpaces: false,
  },
  {
    label: 'Text Field',
    description: 'Description',
    validate: {
      required: true,
      json: {
        '==': [
          {
            var: 'text',
          },
          'Bob',
        ],
      },
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      minLength: '',
      maxLength: '',
      pattern: '',
    },
    input: true,
    key: 'textField2',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: true,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: {
      type: 'input',
    },
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    type: 'textfield',
    mask: false,
    inputType: 'text',
    inputFormat: 'plain',
    inputMask: '',
    displayMask: '',
    spellcheck: true,
    truncateMultipleSpaces: false,
    id: 'et6zs29',
  },
]

const mockTextAreas = [
  {
    label: 'Text Area',
    description: '',
    key: 'textArea1',
    type: 'textarea',
    input: true,
    position: 2,
    validate: {
      json: null,
      required: false,
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      minLength: '',
      maxLength: '',
      pattern: '',
      minWords: '',
      maxWords: '',
    },
    autoExpand: false,
    maxCharCount: null,
    question: 54,
    id: 'erhvzak',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: true,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: {
      type: 'input',
    },
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    mask: false,
    inputType: 'text',
    inputFormat: 'html',
    inputMask: '',
    displayMask: '',
    spellcheck: true,
    truncateMultipleSpaces: false,
    rows: 3,
    wysiwyg: false,
    editor: '',
    fixedSize: true,
  },
  {
    label: 'Text Area',
    description: 'Description',
    maxCharCount: '80',
    validate: {
      required: true,
      json: {
        '==': [
          {
            var: 'text',
          },
          'Bob',
        ],
      },
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      minLength: '',
      maxLength: '',
      pattern: '',
      minWords: '',
      maxWords: '',
    },
    input: true,
    key: 'textArea2',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: true,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: {
      type: 'input',
    },
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    type: 'textarea',
    mask: false,
    inputType: 'text',
    inputFormat: 'html',
    inputMask: '',
    displayMask: '',
    spellcheck: true,
    truncateMultipleSpaces: false,
    rows: 3,
    wysiwyg: false,
    editor: '',
    fixedSize: true,
    id: 'ewrg6od',
    autoExpand: true,
  },
]

const mockSelectBoxes = [
  {
    label: 'Select Boxes',
    description: '',
    key: 'selectBoxes',
    type: 'selectboxes',
    input: true,
    position: 3,
    validate: {
      json: null,
      required: false,
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      onlyAvailableItems: false,
    },
    values: [
      {
        label: 'One',
        value: 'one',
        position: 1,
      },
      {
        label: 'Two',
        value: 'two',
        position: 2,
      },
    ],
    question: 55,
    id: 'e7rvihg',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: false,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: null,
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    dataSrc: 'values',
    authenticate: false,
    ignoreCache: false,
    template: '<span>{{ item.label }}</span>',
    inputType: 'checkbox',
    data: {
      url: '',
    },
    fieldSet: false,
    inline: false,
  },
  {
    label: 'Select Boxes',
    description: 'Description',
    validate: {
      required: true,
      json: {
        '==': [
          {
            var: 'text',
          },
          'Bob',
        ],
      },
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      onlyAvailableItems: false,
    },
    values: [
      {
        label: 'One',
        value: 'one',
      },
      {
        label: 'Two',
        value: 'two',
      },
    ],
    input: true,
    key: 'selectBoxes1',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: false,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: null,
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    dataSrc: 'values',
    authenticate: false,
    ignoreCache: false,
    template: '<span>{{ item.label }}</span>',
    type: 'selectboxes',
    inputType: 'checkbox',
    data: {
      url: '',
    },
    fieldSet: false,
    inline: false,
    id: 'e577fo9',
  },
]

const mockSelects = [
  {
    label: 'Select',
    widget: 'html5',
    placeholder: '',
    description: '',
    validate: {
      required: false,
      json: '',
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      onlyAvailableItems: false,
    },
    data: {
      values: [
        {
          label: 'One',
          value: 'one',
        },
        {
          label: 'Two',
          value: 'two',
        },
      ],
      json: '',
      url: '',
      resource: '',
      custom: '',
    },
    input: true,
    key: 'select',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: true,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    dataSrc: 'values',
    authenticate: false,
    ignoreCache: false,
    template: '<span>{{ item.label }}</span>',
    type: 'select',
    idPath: 'id',
    clearOnRefresh: false,
    limit: 100,
    valueProperty: '',
    lazyLoad: true,
    filter: '',
    searchEnabled: true,
    searchDebounce: 0.3,
    searchField: '',
    minSearch: 0,
    readOnlyValue: false,
    selectFields: '',
    selectThreshold: 0.3,
    uniqueOptions: false,
    fuseOptions: {
      include: 'score',
      threshold: 0.3,
    },
    indexeddb: {
      filter: {},
    },
    customOptions: {},
    useExactSearch: false,
    id: 'e33dqt',
  },
  {
    label: 'Select',
    widget: 'html5',
    placeholder: 'Placeholder',
    description: 'Description',
    validate: {
      required: true,
      json: {
        '==': [
          {
            var: 'text',
          },
          'Bob',
        ],
      },
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      onlyAvailableItems: false,
    },
    data: {
      values: [
        {
          label: 'One',
          value: 'one',
        },
        {
          label: 'Two',
          value: 'two',
        },
      ],
      json: '',
      url: '',
      resource: '',
      custom: '',
    },
    input: true,
    key: 'select1',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: true,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    dataSrc: 'values',
    authenticate: false,
    ignoreCache: false,
    template: '<span>{{ item.label }}</span>',
    type: 'select',
    idPath: 'id',
    clearOnRefresh: false,
    limit: 100,
    valueProperty: '',
    lazyLoad: true,
    filter: '',
    searchEnabled: true,
    searchDebounce: 0.3,
    searchField: '',
    minSearch: 0,
    readOnlyValue: false,
    selectFields: '',
    selectThreshold: 0.3,
    uniqueOptions: false,
    fuseOptions: {
      include: 'score',
      threshold: 0.3,
    },
    indexeddb: {
      filter: {},
    },
    customOptions: {},
    useExactSearch: false,
    id: 'e4p4x3ea',
  },
]

const mockRadios = [
  {
    label: 'Radio',
    description: '',
    validate: {
      required: false,
      json: '',
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      onlyAvailableItems: false,
    },
    values: [
      {
        label: 'One',
        value: 'one',
      },
      {
        label: 'Two',
        value: 'two',
      },
    ],
    input: true,
    key: 'radio',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: false,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: null,
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    dataSrc: 'values',
    authenticate: false,
    ignoreCache: false,
    template: '<span>{{ item.label }}</span>',
    type: 'radio',
    inputType: 'radio',
    data: {
      url: '',
    },
    fieldSet: false,
    id: 'e44f4c',
  },
  {
    label: 'Radio',
    description: 'Description',
    validate: {
      required: true,
      json: {
        '==': [
          {
            var: 'text',
          },
          'Bob',
        ],
      },
      custom: '',
      customPrivate: false,
      strictDateValidation: false,
      multiple: false,
      unique: false,
      onlyAvailableItems: false,
    },
    values: [
      {
        label: 'One',
        value: 'one',
      },
      {
        label: 'Two',
        value: 'two',
      },
    ],
    input: true,
    key: 'radio1',
    placeholder: '',
    prefix: '',
    customClass: '',
    suffix: '',
    multiple: false,
    defaultValue: null,
    protected: false,
    unique: false,
    persistent: true,
    hidden: false,
    clearOnHide: true,
    refreshOn: '',
    redrawOn: '',
    tableView: false,
    modalEdit: false,
    dataGridLabel: false,
    labelPosition: 'top',
    errorLabel: '',
    tooltip: '',
    hideLabel: false,
    tabindex: '',
    disabled: false,
    autofocus: false,
    dbIndex: false,
    customDefaultValue: '',
    calculateValue: '',
    calculateServer: false,
    widget: null,
    attributes: {},
    validateOn: 'change',
    conditional: {
      show: null,
      when: null,
      eq: '',
    },
    overlay: {
      style: '',
      left: '',
      top: '',
      width: '',
      height: '',
    },
    allowCalculateOverride: false,
    encrypted: false,
    showCharCount: false,
    showWordCount: false,
    properties: {},
    allowMultipleMasks: false,
    addons: [],
    dataSrc: 'values',
    authenticate: false,
    ignoreCache: false,
    template: '<span>{{ item.label }}</span>',
    type: 'radio',
    inputType: 'radio',
    data: {
      url: '',
    },
    fieldSet: false,
    id: 'ej0tb08',
  },
]

export const mockData: FormType & { id: number; classification: string | null } = {
  display: 'wizard',
  title: 'Test title',
  id: 2,
  classification: null,
  components: [
    {
      ...mockPanels[0],
      components: [mockTextFields[0], mockTextAreas[0], mockSelectBoxes[0], mockSelects[0], mockRadios[0]],
    },
    {
      ...mockPanels[1],
      components: [mockTextFields[1], mockTextAreas[1], mockSelectBoxes[1], mockSelects[1], mockRadios[1]],
    },
  ],
}
